# imported this as such:
#  ./buildsupport/base/build-base.properties imports
# these values make base-targets and base-macros work

# to override any of these properties with a project specific change
# import your own build.properties BEFORE including build-base.properties

# build related files and directories
project.dir=${basedir}
src.name=src
assets.name=assets
build.src.dir=${project.dir}/${src.name}
css.files.dir=${build.src.dir}/styles
css.file.name=style.css
css.sdk.config=flex

build.dir.output=${project.dir}/build/output
build.dir.output.binary=${build.dir.output}/bin
build.dir.output.package=${build.dir.output}/package
build.dir.output.report=${build.dir.output}/report
build.dir.output.unit=${build.dir.output}/unit
build.dir.output.css=${build.dir.output}/bin

flex.dir.home=!!YOU HAVE TO SET THIS IN YOUR PROJECT LOCAL BUILD.PROPERTIES!!
flex.frameworks.dir=${flex.dir.home}/frameworks
flex.libs.dir=${flex.frameworks.dir}/libs
flex.mobile.dir=${flex.libs.dir}/mobile
flex.air.dir=${flex.libs.dir}/air
flex.playerglobal.dir=${flex.libs.dir}/player
flex.locale.dir=${flex.frameworks.dir}/locale

# compile configuration
config.compiler.additional=${buildsupport.dir}/config/default-compile-config.xml
config.compiler.css=${config.compiler.additional}
mxmlc.executable=${flex.dir.home}/bin/mxmlc
player.version.target=11.1
flex.locale=en_US

#NOTE:
# set a path to non-default compile configs by overriding the above 
# properties in your project specific build.properties

#main 
app.file.input=${project.dir}/src/${project.name}.mxml
app.binary.name=${project.name}.swf
app.file.output=${build.dir.output.binary}/${app.binary.name}

#libraries
lib.dir.input=${project.dir}/src
lib.file.output=${build.dir.output.binary}/${project.name}.swc
compc.src.includes=*
# if your build is breaking trying to compile xml or something
# in YOUR LOCAL build.properties try setting compc.src.includes
# to something like **/*.as **/*.mxml or whatever pattern(s) you need


#packaging
app.descriptor=${project.dir}/src/${project.name}-app.xml
app.package.dir=${build.dir.output.package}
app.package.filename=${project.name}
app.package.extension.air=.air
app.package.extension.ios=.ipa
app.package.extension.android=.apk
package.ipa.type=ipa-debug
package.apk.type=apk-debug

keystore.type.desktop=PKCS12
keystore.path.desktop=${buildsupport.dir}/config
keystore.name.desktop=build-cert.p12
keystore.password.desktop=password

keystore.type.android=PKCS12
keystore.path.android=${buildsupport.dir}/config
keystore.name.android=build-cert.p12
keystore.password.android=password

keystore.type.ios=PKCS12
keystore.path.ios=NOT/DEFINED/
keystore.name.ios=NOTDEFINED.p12
provisioning.profile=not.defined.profile
keystore.password.ios=notDefinedPassword

# override this to include specific -extdir entries
# you can specify for each package type, or universal
native.extension.includes.universal=
native.extension.includes.android=
native.extension.includes.ios=

app.descriptor.token.default=[This value will be overwritten by Flash Builder in the output app.xml]
app.assets.dir=${build.src.dir}/${assets.name}

# of course, you aren't stuck with the build.number shown here
# DON'T CHANGE THIS ONE
# Override in your own property file, or pass -Dbuild.number=XXX 
# You can also import and call the increment-version target if you want 
# the build.number property to be incremented and set by ant
app.version.token=[build-number]
build.number=999
buildnumber.file.path=${project.dir}/build
buildnumber.file.name=buildnumber.txt

# for ANE packaging:
# you should COPY these into your local build.properties
# and set them to the right value
# native.extensions.dir=${project.dir}/libs
# ios.sdk.path=/Developer/blah/blah/blah
# android.sdk.path=~/tools/sdk/android/blah/blah

#flex unit
config.flexunit.additional.default=${buildsupport.dir}/config/flexunit-compile-config.xml
#NOTE:
# set a path to non-default compile config by creating config.flexunit.additional 
# property in your project specific build.properties
flexunit.version=4.1.0-8
unit.dir.to=${build.dir.output}/unit
unit.dir.source=${project.dir}/src
unit.dir.source.test=${project.dir}/test
unit.dir.to.report=${build.dir.output.report}/flexunit

#flex pmd
version.flexpmd=1.1

# help
help.list.targets.file=${project.dir}/build.xml